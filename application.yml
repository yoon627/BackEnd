server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
    static-path-pattern: /**
    media-types:
      js: text/javascript
  pathmatch:
    matching-strategy: ant_path_matcher

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/DevOnOff?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        show_sql: true
    show-sql: true
    open-in-view: false

  jackson:
    serialization:
      fail-on-empty-beans: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "${GOOGLE_CLIENT_ID}"
            client-secret: "${GOOGLE_CLIENT_SECRET}"
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - profile
              - email
          naver:
            client-id: "${NAVER_CLIENT_ID}"
            client-secret: "${NAVER_CLIENT_SECRET}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Naver
          kakao:
            client-id: "${KAKAO_CLIENT_ID}"
            client-secret: "${KAKAO_CLIENT_SECRET}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id

  mail:
    host: smtp.gmail.com
    port: 587
    username: "${EMAIL_USERNAME}"
    password: "${EMAIL_PASSWORD}"
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jwt:
    secret: "${JWT_SECRET}"

data:
  redis:
    host: localhost
    port: 6379
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
    org.springframework.security: DEBUG

cloud:
  aws:
    s3:
      bucket: ${AWS_BUCKET_NAME}
    region:
      static: ${AWS_REGION}
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
    stack:
      auto: false